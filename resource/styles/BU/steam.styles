steam.styles
{
  colors
  {
    // colors section can include colors in "R G B A" form, or references to already defined colors;
    // it can also include just general settings controls can pull from for extra customization
  
    black="0 0 0 255"
    almostBlack="23 22 20 255"
    white="255 255 255 255"
    grey="158 153 149 255"
    none="0 0 0 0"
    yellow="255 255 0 255"
    offwhite="166 164 159 255"
    dullgreen="216 222 211 255"
    maize="203 191 87 255"
    red="255 51 51 255"
    darkblue="0 85 128 255"
    blue="0 133 199 255"
    darkred="128 0 0 255"
    darkpurple="64 0 64 255"

txtTeal="0 206 209 255" //dark turquoise
txtTealBright="72 209 204 255" //medium turquoise
txtTealDark="95 158 160 255" //cadet blue
txtBG="175 238 238 255" //pale turquoise
DialogBlue1="30 69 167 255" //cornflower blue //-30 -30 -30 +20
DialogBlue2="25 35 155 255" //royal blue //-30 -30 -30 +20
UltraTeal="0 255 255 255" //cyan
UltraBlue="0 115 255 255" //custom
MenuColour="0 156 159 255" //custom
MenuBorder="0 255 255 255" //custom
MenuSelected="0 176 179 255" //custom
btnFaceBlue=DialogBlue1
btnFaceBlueHover=DialogBlue2
ChatBlue="0 9 107 255"
    
    // control colors
    bordercolor="133 130 113 255"
    darkcorner="77 73 71 255"
    buttontext=Text
    buttontextactive=Text
    
    // cool we can define font-families here as well
    basefont="Arial"
    basefont="Helvetica" [$OSX]
    
    // new control colors
    ButtonFace="105 102 99 200"
    ButtonFace2="92 89 86 255" // for use in main client list panel column header, some button states
    ButtonFace3="95 92 90 255" // button cornering pixels
    ButtonFaceDisabled="none"
    ButtonFaceHover="105 102 99  240"   /// hover!
    ButtonFaceActive="105 102 99  240"  // not sure what this state is...
    ButtonFaceFocus="105 102 99  240"  //  keyboard focus
    ButtonFaceActiveFocus="105 102 99  255"  // this is the default choice
    
    ButtonBorder="112 109 105 255"
    ButtonBorderPage="128 124 120 255"
    ButtonBorderDisabled="77 75 72 255"
    ButtonBorderDisabled2="67 65 63 255"  //cornering pixels
    ButtonBorderActive="140 135 129 255"
    ButtonBorderFocus="153 147 141 255"

    
    Text=txtTeal
    Text2=txtTeal
    TextDisabled=txtTealDark
    TextHover=txtTealBright
    TextSelected=txtTealBright
    TextentrySelected=white // color of any selected text
    TextSelectedBG=txtBG // background color of any selected text 
    TextGlowHover="128 124 120 255"
    TextGlowSelected="171 169 166 255"
    TextGlowHoverSm="128 123 120 255"
    TextGlowSelectedSm="145 142 140 255"
    
    NavLabel="158 153 149 255"
    Label=txtTeal
    Label2=txtTeal
    LabelDisabled=txtTealDark
    LabelFocus=txtTealBright
    
    ScrollGlyph="204 198 192 255"  // the color of the scroll bar arrows
    ScrollGlyphDisabled="77 74 72 255"
    ScrollGlyphFocus="242 242 242 255"
    
    ScrollBG="77 74 72 255" // the color of the scroll bar gutter
    
    HeaderClient="57 53 49 255" // the color of the List box header in the main client window
    HeaderDialog="95 92 90 255" // the color of the list box header in other windows
    
    TitleBar="86 81 78 50"
    TitleBarFocus="176 169 162 50"
    
    Focus="49 65 89 255"  		// background color of any selected menu or list item
    Focus2="85	125 171 255"		// background color of view buttons and anything else in focus that needs more 'punch'
    Focus3="62 92 133 255"		// background color of highlighted friends 
    FocusGrid="85 146 160 240"  	// background color of any grid item
    Highlight="81 140 170 120" 	// same as focus
    Highlight1="204 185 88 255"    // installing hover color
    Highlight2="181 164 78 255" 	// installing color 
    Highlight3="173 69 71 255"    	// red for errors, blocked, etc.
    Highlight5="77 109 140 255" 	// blue 
    Highlight5a="83 124 166 255" 	// lighter version of highlight5
    Highlight5b="59 85 98 255" 	// as highlight5 but darker, for non-focused window borders

    BackgroundStartSubtle="20 20 20 155" 
    BackgroundStartSubtle="31 31 31 45" [$OSX]
    BackgroundStart="23 22 20 180"
    BackgroundStartOpaque="36 35 34 255"
    
    ClientBG="0 0 0 255"
    DialogBG=DialogBlue1

    DarkClientBG="36 35 34 255"
    DarkDialogBG="56 54 53 255"
    DarkClientBGTransparent="36 35 34 19"
    DarkDialogBGTransparent="56 55 53 170"

    GameDetailsBlueTransparent="89 134 179 160"
    GameDetailsGreenTransparent="126 166 75 160"
    GameDetailsRedTransparent="173 69 71 160"

    GameDetailsBlue="89 134 179 255"
    GameDetailsGreen="126 166 75 255"
    GameDetailsRed="173 69 71 255"

    PropertySheetBG=DialogBlue2
    InteriorColor="64 62 60 255"
    
    DialogBorder="119 117 115 255" // border color around any dialog
    
    FillBG1="64 62 60 255" //gradient colors
    FillBG2="71 69 67 255"
    
    MenuBG1=DialogBlue1 //gradient colors
    MenuBG2=DialogBlue1
    
    Divider="107 104 101 255"
    DarkImageBorder="47 48 43 255"
    DarkImageOverlay="0 0 0 80"

    // colors pulled from steamscheme.res
    "ClayBG"      "70 70 70 255"
    "ClayButtonBG"      "87 88 88 255"        
    "ClayEnabled"     "85 88 82 255"
    "ClayKeyFocus"      "89 92 77 255"
    "ClayMouseDown"     "85 85 85 255"
    "ClayDisabledText"    "128 134 126 255"
    "ClayLightGreen"    "173 181 168 255" // frame button (close X) etc
    "ClayDimLightGreen"   "166 172 162 255" // frame button and title without focus etc
    "LightClayBG"     "104 106 101 255" // property sheet interior, active tab
    "LightClayButtonBG"   "125 128 120 255" // buttons on property sheet interior, active tab
    "DarkClayBG"      "47 49 45 255"    // shadow
    "p_ClayMouseDown"   "94 94 94 255"
    "ClaySheetBottom"   "92 90 87 255"
    "MaizeBG"     "145 134 60 255"  // background color of any selected text or menu item
    "GreenBG"     "76 88 68 255"
    "LightGreenBG"      "90 106 80 255"   // darker background color
    "DarkGreenBG"     "62 70 55 255"    // background color of text edit panes (chat, text Entries, etc.)
    "LightGrayBG"     "121 126 121 255"
    "GrayBG"      "77 73 71 255"
    "GrayBG2"     "39 37 35 255"
    "TempGradientTop" "53 52 51 255"
    
    
    DragDrop.DragFrame        "255 255 255 192"
    DragDrop.DropFrame        "150 255 150 255"

    Frame.ClientInsetX        10
    Frame.ClientInsetY        35
    Frame.FocusTransitionEffectTime   "0"     // time it takes for a window to fade in/out on focus/out of focus
    Frame.TransitionEffectTime      "0.25"      // time it takes for a window to fade in/out on open/close
    Frame.OnDragAlphaDelayTime      "0.15"      // time it takes after clicking the title bar of a window before the alpha multiplier kicks in
    Frame.OnDragAlphaMultiplier     "1.0"     // multiplier applied to alpha while dragging a frame
    Frame.AutoSnapRange         "6"
    Frame.UsesAlphaBlending       1
    FrameSystemButton.Icon        ""
    FrameSystemButton.DisabledIcon    ""

    Notifications.PanelPosition     "BottomRight"   // Can be "BottomRight", "BottomLeft", "TopRight", "TopLeft"
    Notifications.PanelPosition     "TopRight" [$OSX]  // the dock is on the bottom for OSX, so instead pop top right like other apps do
    Notifications.SlideDirection    "Vertical"    // Can be "Vertical", "Horizontal", "None" and controls slide effect
    Notifications.FadeInTime      "0.45"    // Controls the time it takes to slide/fade into view
    Notifications.FadeOutTime     "0.45"    // Controls the time it takes to slide/fade out of view
    Notifications.DisplayTime     "6.0"     // Controls the length of time at steady state after fade in and before fade out
    Notifications.StackSize       "3"     // Controls how many panels we will stack before background queuing

    ListPanel.TextColor       Text
    ListPanel.BgColor       none  
    ListPanel.SelectedTextColor     TextentrySelected
    ListPanel.SelectedBgColor     TextSelectedBG
    ListPanel.SelectedOutOfFocusBgColor   ClientBG
    ListPanel.DisabledTextColor     TextDisabled
    ListPanel.DisabledSelectedTextColor   ClientBG
    ListPanel.EmptyListInfoTextColor    Label
    ListPanel.PerPixelScrolling     1
    ListPanel.PostSectionLeading	10

	// Default tooltip delay pops fast, but lets the mouse pass through without popping
	// Anchor=Cursor makes it stick to initial pop location like windows implementation.
	// Anchor can also be 'Float' to move with the mouse, or 'Parent' to stick just outside
	// the parent panel (useful for icon sized items)
	Tooltip.Delay=75
	Tooltip.Anchor=Cursor

	
    WizardPanel.HeaderBGColor     HeaderDialog

    Menu.TextInset          "6"
    
    PropertySheet.TransitionEffectTime    "0"     // time to change from one tab to another
    PropertySheet.TabGap        1
    PropertySheet.FlashTabColor	"255 114 76 255"

    RichText.InsetX         8
    RichText.InsetY         7

    ScrollBar.Wide          19
    
    SectionedListPanel.CollapserWidth   16
    
    HTML.SearchInsetY 5
    HTML.SearchInsetX 10
    HTML.SearchWide 348
    HTML.SearchTall 38
    HTML.SearchAnimationTime 0.25
    html.secureurl "126 166 75 255"
    html.insecureurl "173 69 72 255"
    
    MessageBox.ButtonHeight		24
    
    TextEntry.IMEBGColor        "225 225 225 255"
    TextEntry.IMEFGColor        "black"
    

    // Friends List colors
    Friends.InGameColor       "140 179 89 255"
    Friends.OnlineColor       "134 181 217 255"
    Friends.OfflineColor      "Label"
    Friends.PanelDefault      "Label"
    Friends.PanelOver       "Text"
    Friends.PanelSelected     "ClientBG"
    Friends.SectionHeader     "Label"
    Friends.NoAvatarOver      "Text"
    Friends.IgnoredColor      "Highlight3"
  
    ChatDialog.URLColor       "text"
    ChatOwnTextColor        "Label"
    ChatGradientTop         "39 39 39 255"
    ChatGradientBottom        "102 104 99 255"
    
    AchievementPopup.TitleColor   "Text"
    AchievementPopup.DescriptionColor "180 180 180 255"
    
    GiftOnlyInfo.ImagePanelColor  "GrayBG"    
 }
  
  styles
  {
	downarrow
	{
      image="graphics/icon_down_default"    
	}

	downarrow:hover
	{
      image="graphics/icon_down_hover"

	
			render_bg {
			
			//background
			0="fill( x0 + 5, y0 + 4, x1 - 2, y1 - 4, buttonfaceactive )"
			//lines around
			1="fill(x0 + 4, y0 + 5, x0 + 5, y1 - 5, buttonfaceactive )"  //left
			2="fill(x1 - 2, y0 + 5, x1 - 1, y1 - 5, buttonfaceactive )"  //right
			}
	}

	uparrow
	{
      image="graphics/icon_up_default"    
	}
	
	rightarrow
	{
      image="graphics/icon_right_default"   
	}
	
	
	rightarrow:hover
	{
      image="graphics/icon_right_hover"    
	}
	
    Button
    {     
		font-family=basefont
		font-size=13
		font-weight=400
		textcolor="Text"
		font-style=uppercase
		bgcolor=none
		render_bg
		{
			// background fill
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
                
			// lines around
			1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
			2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
			3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
			4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
	
			// single pixel fills in the corners
			5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
			6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
			7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
			8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}
    }
 
    "Page Button"
    {     
		render_bg
		{
			// background fill
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
					
			// lines around
			1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderPage )"  // top
			2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderPage )"  // bottom
			3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderPage )"  // left
			4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderPage )"  // right
	
			// single pixel fills in the corners
			5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderPage )"
			6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderPage )"
			7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderPage )"
			8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderPage )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}
    }
    
	Button:hover
    {   
      		textcolor="TextHover"
      		render_bg
      {     
        // background fill
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
                
        // lines around
			1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
			2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
			3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
			4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right

			   // single pixel fills in the corners
			   5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
			   6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
			   7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
			   8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
        		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"

      }
    }

    "Page Button:hover"
    {   
      textcolor="TextHover"
      render_bg
      {     
               // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
      }
    }
    
    Button:focus
    {
        
	textcolor="TextHover"
	render_bg
        {
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfacefocus, propertysheetbg )"			
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right

		        // single pixel fills in the corners
		        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
		        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
		        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
		        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
        		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page Button:focus"
    {
      textcolor="TextHover"
      render_bg
      {     
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfacefocus, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus  )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus  )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus  )"
      }
    }
    
    	Button:active // this is the left-mouse-currently-pressed state
	{
       textcolor="TextHover"
       render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, DialogBG, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder  )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder  )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder  )"
        			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page Button:active"
    {
       textcolor="TextHover"
       render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, DialogBG, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder  )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder  )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder  )"
        			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    

    
    Button:selected
    {
      textcolor="TextHover"
      render_bg
      {     
                // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactivefocus, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus  )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus  )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus  )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus  )"
        			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }

    "Page Button:selected"
    {
      textcolor="TextHover"
      render_bg
      {     
                // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactivefocus, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
		
        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus  )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus  )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus  )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus  )"
        			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    Button:disabled
    {
      textcolor="LabelDisabled"
      render_bg
      {     
        // background fill
        0="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, none )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
        			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
        
      }
    }   
    
    "Page Button:disabled"
    {     
	textcolor="LabelDisabled"
      render_bg
      {
				// background fill
        0="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, none )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled  )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled  )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled  )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled  )"
        			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }
      
    }
    
         
    CFriendsListSectionAffordance
    {     
      inset="0 0 0 0"
      font-size=14
      font-weight=400
      textcolor="Label"
    }
    
    CFriendsListSectionHeader
    {
      bgcolor=none
      font-family=basefont
      font-size=14
      font-size=13 [$OSX]
      font-weight=400
      textcolor="texthover"
      inset="0 2 0 0"
      render_bg
		{
			0="gradient_horizontal( x0-21, y0+1, x0+230, y1+1, buttonface2, none )"
		}
    }
            
    CFriendPanel
    {
      inset="0 2 0 0"
      bgcolor=none
      font-family=basefont
      font-size=14
      font-size=13 [$OSX]
      font-weight=400
      textcolor="label"
    }

    
    CheckButton
    {
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="Label"
      image="graphics/chkUnselStd"
    }
  
    CheckButton:selected
    {
      image="graphics/chkSelStd"    
    }

    CheckButton:focus
    {
      textcolor="Text"
      bgcolor=none
      image="graphics/chkUnselFocus"  
    }

    CheckButton:selected:focus
    {
      textcolor="Text"
      render_bg {}
      bgcolor=none
      image="graphics/chkSelFocus"
    }
    
    CheckButton:disabled
    {
      textcolor="TextDisabled"
      bgcolor=none
      image="graphics/chkUnselDis"
    }
    
    CheckButton:selected:disabled
    {
      textcolor="TextDisabled"
      bgcolor=none
      //!! bug - this needs to look disabled
      image="graphics/chkSelDis"
    }
    
    CheckButtonList
    {
        inset="1 1 1 1"
        textcolor="text2"
        bgcolor=none
        render_bg
        {     
				// background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y0 +80, dialogbg, BackgroundStartOpaque )"
        1="fill( x0 + 1, y0 + 80, x1 - 1, y1 - 1, BackgroundStartOpaque )"
        2="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 30, backgroundstartsubtle, none )"
          
        // lines around
		3="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		4="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		5="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		6="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        
        // single pixel fills in the corners
		7="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		8="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		9="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		10="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }
  
    } 
    
    CheckButtonList:scrollbar
    {
        inset="1 1 1 1"
        textcolor="text2"
        bgcolor=none
				render
							{
								//gradient to obscure content at top of scrolling region 
								0="gradient( x0+1, y0, x1+1, y0 + 6, dialogbg, none  )"
								
								//gradient to obscure content at bottom of scrolling region 
								1="gradient( x0, y1 - 9, x1+1, y1-1, none, almostblack )"
							}        
        render_bg
        {     
				// background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y0 +80, dialogbg, BackgroundStartOpaque )"
        1="fill( x0 + 1, y0 + 80, x1 - 1, y1 - 1, BackgroundStartOpaque )"
        2="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 30, backgroundstartsubtle, none )"
          
        // lines around
		3="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		4="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		5="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		6="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        
        // single pixel fills in the corners
		7="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		8="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		9="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		10="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }
  
    } 
    
    "Page CheckButtonList"
    {
        inset="1 1 1 1"
        textcolor="text2"
        bgcolor=none
        render_bg
        {     
				// background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y0 +80, dialogbg, BackgroundStartOpaque )"
        1="fill( x0 + 1, y0 + 80, x1 - 1, y1 - 1, BackgroundStartOpaque )"
        2="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 30, backgroundstartsubtle, none )"
          
        // lines around
		3="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		4="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		5="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		6="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        
        // single pixel fills in the corners
		7="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		8="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		9="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		10="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }
  
    }
    
        "Page CheckButtonList:scrollbar"
    {
        inset="1 1 1 1"
        textcolor="text2"
        bgcolor=none
        render
							{
								//gradient to obscure content at top of scrolling region 
								0="gradient( x0+1, y0, x1+1, y0 + 6, dialogbg, none  )"
								
								//gradient to obscure content at bottom of scrolling region 
								1="gradient( x0, y1 - 9, x1+1, y1-1, none, almostblack )"
							}   
        render_bg
        {     
				// background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y0 +80, dialogbg, BackgroundStartOpaque )"
        1="fill( x0 + 1, y0 + 80, x1 - 1, y1 - 1, BackgroundStartOpaque )"
        2="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 30, backgroundstartsubtle, none )"
          
        // lines around
		3="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		4="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		5="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		6="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        
        // single pixel fills in the corners
		7="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		8="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		9="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		10="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }
  
    }
    
    "CheckbuttonList Checkbutton"
    {textcolor="text2"}
    
    
    ComboBox
    {
      inset="3 0 0 0"
      textcolor="Text"
      font-family=basefont
      font-size="14"
      selectedtextcolor="TextEntrySelected"
      selectedbgcolor="TextSelectedBG"
      render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    ComboBox:hover
    {
    selectedbgcolor="none"
    selectedtextcolor="Text"
    render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    ComboBox:focus
    {
    selectedbgcolor="none"
    selectedtextcolor="Text"
    render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
      }
    }
    
    ComboBox:focus:hover
    {
    selectedbgcolor="none"
    selectedtextcolor="Text"
    render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page ComboBox"
    {
      render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderPage )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderPage )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderPage )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderPage )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderPage )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderPage )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderPage )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderPage )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page ComboBox:focus"
    {
      render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page ComboBox:hover"
    {
      render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfacehover, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page ComboBox:focus:hover"
    {
      render_bg
      {     
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
  
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    
    ComboBoxButton
    {      

      bgcolor=none
      padding-left=2
      image="graphics/icon_down_default"
      // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorder )"
      }
    }
    
    ComboBoxButton:hover
    {
      image="graphics/icon_down_hover"
            // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, label )"
      }
    }
    
    ComboBoxButton:focus
    {

      bgcolor=none
      image="graphics/icon_down_focus"
      // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive )"
      }
    }
    
    ComboBoxButton:focus:hover
    {

      bgcolor=none
      image="graphics/icon_down_default"
      // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive  )"
      }
    }
    
    
    "Page ComboBoxButton"
    {
      bgcolor=none
      image="graphics/icon_down_default"
      // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderPage )"
      }
    }
    
    "Page ComboBoxButton:hover"
    {
      image="graphics/icon_down_hover"
       // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive  )"
      }
    }
    
    "Page ComboBoxButton:focus"
    {

      bgcolor=none
      image="graphics/icon_down_focus"
      // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive  )"
      }
    }
    
    "Page ComboBoxButton:focus:hover"
    {

      bgcolor=none
      image="graphics/icon_down_focus"
      // just draw a single line to divide it from the text
      render_bg 
      {
        0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive )"
      }
    }
    
    Divider
    {
      bgcolor="none"
      render
      {
       0="gradient_horizontal( x0, y1 - 1, x1 + 1, y1, divider, propertysheetbg )"     
      }

    }
    
    Frame
    {
    bgcolor="DialogBG"
      render
      {
        0="gradient_horizontal( x0, y1 - 1, x1 + 1, y1, ClientBG, Highlight5 )"     
        1="gradient( x1 - 1, y0, x1, y1, ClientBG, Highlight5 )" 
        2="fill( x0, y0, x1, y0 + 1, ClientBG )"
        3="fill( x0, y0, x0 + 1, y1, ClientBG )"
      }
    } 
    
    Frame:FrameFocus
    {
    bgcolor="DialogBG"
      render
      {
        0="gradient_horizontal( x0, y1 - 1, x1 + 1, y1, ClientBG, Highlight5 )"     
        1="gradient( x1 - 1, y0, x1, y1, ClientBG, Highlight5 )" 
        2="fill( x0, y0, x1, y0 + 1, ClientBG )"
        3="fill( x0, y0, x0 + 1, y1, ClientBG )"
      }
    } 
    
    
    FrameBRGripPanel
    {
      image=graphics/resizer

    }
    
    FrameBRGripPanel:hover
    {
      image=graphics/resizer_over

    }
    
    FrameMinimizeButton
    {
		render_bg {}
		image="graphics/win32_win_min"
		image="graphics/osx_win_dis" [$OSX]
    }
    
    FrameMinimizeButton:hover
    {  
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_min_hover"
		image="graphics/osx_min_hov" [$OSX]
    }

	FrameMinimizeButton:framefocus [$OSX]
    {
		render_bg {}
		bgcolor="none"
		image="graphics/osx_min_def"
    }
 
	FrameMinimizeButton:framefocus:hover [$OSX]
    {
		render_bg {}
		bgcolor="none"
		image="graphics/osx_min_hov"
    }
	
	FrameMinimizeButton:active [$OSX]
    {
		render_bg {}
		bgcolor="none"
		image="graphics/osx_min_down"
    }

	// need the maximize button to have different styles for OSX & win32
   	   	FrameMaximizeButton
    {
		render_bg {}
		image="graphics/win32_win_max"
		image="graphics/osx_win_dis" [$OSX]
    }

	FrameMaximizeButton:hover
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_max_hover"
		image="graphics/osx_max_hov" [$OSX]
    }

	FrameMaximizeButton:framefocus
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_max"
		image="graphics/osx_max_def" [$OSX]
    }

	FrameMaximizeButton:framefocus:hover
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_max_hover"
		image="graphics/osx_max_hov" [$OSX]
    }

	FrameMaximizeButton:active
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_max_hover"
		image="graphics/osx_max_down" [$OSX]
    }

	// these are for when the maximize button becomes the restore button
   	FrameRestoreButton
    {
		render_bg {}
		image="graphics/win32_win_restore"
		image="graphics/osx_win_dis" [$OSX]
    }

	FrameRestoreButton:hover
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_restore_hover"
		image="graphics/osx_max_hov" [$OSX]
    }

	FrameRestoreButton:framefocus
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_restore"
    		image="graphics/osx_max_def" [$OSX]
    }

	FrameRestoreButton:framefocus:hover
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_restore_hover"
		image="graphics/osx_max_hov" [$OSX]
    }

	FrameRestoreButton:active
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_restore_hover"
		image="graphics/osx_max_down" [$OSX]
    }

	FrameCloseButton
    {
		render_bg {}
		image="graphics/win32_win_close"
		image="graphics/osx_win_dis" [$OSX]
    }

	FrameCloseButton:hover
    {
		render_bg {}
		image="graphics/win32_win_close_hover"
		image="graphics/osx_close_hov" [$OSX]
    }
    
	FrameCloseButton:framefocus [$OSX]
    {
		render_bg {}
		bgcolor="none"
		image="graphics/osx_close_def"
    }

	FrameCloseButton:framefocus:hover [$OSX]
    {
		render_bg {}
		bgcolor="none"
		image="graphics/osx_close_hov"
    }

	FrameCloseButton:active [$OSX]
    {
		render_bg {}
		bgcolor="none"
		image="graphics/osx_close_down"
    }
    
	FrameCloseButton:disabled
    {
		render_bg {}
		bgcolor="none"
		image="graphics/win32_win_close_disabled" 
		image="graphics/osx_win_dis" [$OSX]
    }


    FrameTitle
    {
		font-family=basefont
		inset="5 2 0 0"
		inset="0 4 0 0" [$OSX]
		padding-left="0"
		padding-right="64"
		padding-right="0" [$OSX]
		font-size=14
		font-weight=400
		textcolor="buttonborderfocus"
		bgcolor="none"
		render_bg
		{
			1="gradient( x0, y0, x1, y1 + 18, TitleBar, none )"
		}
    }

    
    FrameTitle:framefocus
    {
		font-family=basefont
		inset="0 4 0 0" [$OSX]
		font-size=14
		font-weight=400
		bgcolor="none"
		textcolor="texthover"
		textcolor="texthover" [$OSX]
	    render_bg
	      {
	        1="gradient( x0, y0, x1, y1 + 18, titlebarfocus, none )"
	      }
    }
    
   
	"CFriendsDialog SectionedListPanelInterior"
	{
		//bgcolor=none
		//font-family=basefont
		//font-size=14
		//font-weight=400
		//textcolor="Text"
		//selectedtextcolor="TextSelected"
		//selectedbgcolor="Focus"
		//shadowtextcolor="TextDisabled"	// the color of disabled line items		
		//render
		//{
			//gradient to obscure content at top of scrolling region 
			//0="fill( x0+2, y0, x1, y0 + 2, dialogbg )"
			//1="gradient( x0+2, y0+2, x1, y0 + 12, dialogbg, none  )"
			
			//gradient to obscure content at bottom of scrolling region 
			//2="gradient( x0+1, y1 - 18, x1, y1-3, none, almostblack )"
			//3="fill( x0+1, y1 - 4, x1, y1-1, almostblack )"
		//}
		//render_bg 
		//{	
			// background gradient
			//0="gradient( x0, y0, x1, y0 + 149, dialogbg, AlmostBlack )"
			//1="fill( x0, y0 + 149, x1, y1 + 1, AlmostBlack )" 
		//}
	}
	
        		
    GraphPanel
    {
		textcolor=Highlight5
		bgcolor=none
		inset="0 -3 0 0"
		render_bg 
		{
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
			// single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
        }
    }
    
    HTML
    {
		bgcolor="none"
		render_bg 
		{
		0="fill( x0, y0, x1 - 1, y1- 1, almostblack )" // bg
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
			// single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
        }
        inset="2 2 2 2" 
    }
    
    
    Label
	{
		textcolor="Label"
		selectedtextcolor="Text"
		bgcolor="none"
		font-family=basefont
		font-size=14
		font-weight=400
    }
   
    ListPanel
    {
		bgcolor=none
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="text2"
		selectedtextcolor="TextSelected"
		selectedbgcolor="Focus"
		shadowtextcolor="TextDisabled"	// the color of disabled line items
		inset="0 -1 1 1"
		render
		{		}       
		render_bg 
		{
			// background gradient        
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, dialogbg, almostblack )"
			1="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 31, backgroundstartsubtle, none )"

			// lines around
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

			// single pixel fills in the corners

			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
		}
	}
      
    "Page ListPanel"
	{
		
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="Text2"
		selectedtextcolor="TextSelected"
		selectedbgcolor="Focus"
		inset="0 -1 1 1"
		bgcolor=none
	        render_bg
	        {     
		   // background fill
	        0="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 80, Propertysheetbg, BackgroundStartOpaque )"
	        1="fill( x0 + 1, y0 + 80, x1 - 1, y1 - 1, BackgroundStartOpaque )"
	        2="gradient( x0 + 1, y0 + 1, x1 - 1, y0 + 30, backgroundstartsubtle, none )"
	          
	        // lines around
		3="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		4="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		5="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		6="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
	        
	        // single pixel fills in the corners
		7="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		8="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		9="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		10="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
	      }
	}
    
    "CGamesListPanel"
	{
      font-family=basefont
	  bgcolor="none"
      font-size=15
      font-weight=400
      textcolor="Text"
      selectedtextcolor="textselected"
      selectedbgcolor="Focus"
      shadowtextcolor="TextDisabled"
      inset="0 -1 1 1"
      render_bg {

        // background gradient        
        0="gradient( x0+1, y0+1, x1-1, y0 + 432, dialogbg, almostblack )"
        1="fill( x0+1, y0+ 432, x1-1, y1 - 1, almostblack )"
        2="gradient( x0+1, y0+1, x1-1, y0 + 31, BackgroundStartsubtle, none )"
        
        
        // lines around
        3="fill( x0, y0, x0 + 1, y1 - 2, ButtonBorderDisabled )"  //left
        4="fill( x1 - 1, y0, x1, y1 - 2, ButtonBorderDisabled)"  //right
        5="fill( x0 + 2, y0 - 1, x1 - 2, y0, ButtonBorderDisabled )"  //top
        6="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  //btm
        
        // single pixel fills in the corners
		7="fill( x0 + 2, y0 + 1, x0 + 3, y0 + 2, ButtonBorderDisabled )"
		8="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		9="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		10="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      
        }
    }
  
    "GameItem_Uninstalled"
    {
      textcolor="labeldisabled"
      selectedtextcolor="label"
    }
    "GameItem_Uninstalled:hover"
    {
        textcolor="label"
        selectedtextcolor="label"
    }
 
    "GameItem_Installed"
    {
      textcolor="text"
      selectedtextcolor="white"
      }
      
    "GameItem_Installed:hover"
    {
        textcolor="white"
        selectedtextcolor="white"
    }
    
        "GameItem_Shortcut"
    {
      textcolor="text"
      selectedtextcolor="white"
      }
      
    "GameItem_Shortcut:hover"
    {
        textcolor="white"
        selectedtextcolor="white"
    }
    
    "GameItem_Mod"
    {
      textcolor="text"
      selectedtextcolor="white"
      }
      
    "GameItem_Mod:hover"
    {
        textcolor="white"
        selectedtextcolor="white"
    }


    "GameItem_Updating"
    {
    	textcolor="highlight2"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Updating:hover"
    {
    	textcolor="highlight1"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Updating:selected"
    {
    	textcolor="highlight1"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Decrypting"
    {
    	textcolor="highlight2"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Decrypting:hover"
    {
    	textcolor="highlight1"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Decrypting:selected"
    {
    	textcolor="highlight1"
    	selectedtextcolor="highlight1"
    }
    
        "GameItem_Syncing"
    {
    	textcolor="highlight2"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Syncing:hover"
    {
    	textcolor="highlight1"
    	selectedtextcolor="highlight1"
    }
    
    "GameItem_Syncing:selected"
    {
    	textcolor="highlight1"
    	selectedtextcolor="highlight1"
    }
    
   
    "GameColumn_BigText"
	{
		font-family=basefont
		font-size=17
		font-weight=700
		textcolor="text"
    }
    
    ListPanelCheckBox
    {
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="Label"
		image="graphics/chkUnselStd_Sm"
		inset="0 5 0 0"
    }   

    
    ListPanelCheckBox:selected
    {
		image="graphics/chkSelStd_Sm"    
    }

	ListPanelCheckBox:focus
    {
		textcolor="Text"
		bgcolor=none
		image="graphics/chkUnselFocus_Sm"  
    }

    ListPanelCheckBox:selected:focus
    {
		textcolor="Text"
		render_bg {}
		bgcolor=none
		image="graphics/chkSelFocus_Sm"
    }
    
    ListPanelCheckBox:disabled
    {
		textcolor="TextDisabled"
		bgcolor=none
		image="graphics/chkUnselDis_Sm"
    }
    
    ListPanelCheckBox:disabled:select
    {
		textcolor="TextDisabled"
		bgcolor=none
		//!! bug - this needs to look disabled
		image="graphics/chkUnselDis"
    }
    
    "ListPanelColumnheader ListPanelCheckBox"
    {
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="Label"
		image="graphics/chkUnSelFocus_Sm"
		inset="4 0 0 0"  
	}

     
	"ListPanelColumnHeader ListPanelCheckBox:selected"
    {
		inset="4 0 0 0"
		image="graphics/chkUnSelStd_Sm"    
    }
	
	"ListPanelColumnheader ListPanelCheckBox:focus"
    {
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="TextHover"
      image="graphics/chkUnSelFocus_Sm"
      inset="4 0 0 0"  
	}

	"ListPanelColumnheader ListPanelCheckBox:selected:focus"
    {
      textcolor="TextHover"
      render_bg {}
      bgcolor=none
      image="graphics/chkSelFocus_Sm"
      inset="4 0 0 0"  
    }
    
    
    ListPanelColumnheader
    {
		font-family=basefont
		font-size=14
		font-size=13 [$OSX]
		font-weight=400
		textcolor="label"
		font-style="uppercase"
		bgcolor="none"
		inset="1 3 0 0"

		render_bg    
		{
			// fill
			0="fill (x0, y0 + 3, x1, y1 + 1, buttonborderdisabled )" // bg fill
			1="fill (x0 + 1, y0 + 2, x1, y0 + 3, buttonborderdisabled)" // bg fill2
		}   
	}
    
    ListPanelColumnHeader:hover
    {
		textcolor="Texthover"
    }
      
	"Csteamrootdialog ListPanelColumnheader"
    {
		font-family=basefont
		font-size=14
		font-size=13 [$OSX]
		font-weight=400
		textcolor="label"
		font-style="uppercase"
		bgcolor="none"
		inset="0 0 0 0"
		inset="0 1 0 0" [$OSX]
		padding-top=1

		render_bg    
		{
			// fill
			0="fill (x0, y0 + 1, x1, y1, buttonborderdisabled )" // bg fill

			// lines around
			2="fill ( x1 - 1, y0 + 3, x1, y1-1, buttonborderdisabled )" // right
		}   
	}

   
    "Csteamrootdialog ListPanelColumnHeader:hover"
    {
		textcolor="TextHover"
    }
    
   	"Csteamrootdialog ListPanelSectionCollapser"
	{
		inset = "0 1 0 1"
		bgcolor=none
		render_bg
		{
			1="fill( x0 , y0, x1, y1 - 1, buttonface2  )"
		}    
	}
	
	  "CGamesPage_Mini ListPanelSectionCollapser"
	{
		inset = "0 1 0 1"
		bgcolor=none
		render_bg
		{
			1="fill( x0 , y0, x1, y1 - 1, buttonface2  )"
		}    
	}
    

 
	ListPanelColumnSelectButton // the games list column chooser  
    {
        inset="-3 3 0 0"
        render
        {
          // background fill
          1="fill( x0, y0 + 1, x1 - 1, y1, buttonborderdisabled )"  
          
          // lines around
          2="fill( x0 - 4, y0 - 1, x1 + 1, y0 + 1, buttonborderdisabled )"  //top
          3="fill( x0, y1 - 1, x1, y1, buttonborderdisabled )"       //btm
          4="fill( x1-1, y0 + 1, x1, y1, buttonborderdisabled )" //right
          5="image( x0 + 3, y0 + 3, x1, y1, graphics/icon_collapse )"
        }   
        render_bg {}
	}
    
    ListPanelColumnSelectButton:hover
     {
        inset="-3 3 0 0"
        render
        {
          // lines around
          1="fill( x0, y0 + 1, x1 - 1, y1, buttonborderdisabled)"
          2="fill( x0 - 4, y0 - 1, x1 + 1, y0 + 1, buttonborderdisabled )"  //top
          3="fill( x0, y1 - 1, x1, y1, buttonborderdisabled )"       //btm
          4="fill( x1-1, y0 + 1, x1, y1, buttonborderdisabled )" //right
          5="image( x0 + 3, y0 + 3, x1, y1, graphics/icon_collapse_over )"
        }   
        render_bg {}
	}
      
    ListPanelColumnSelectButton:selected
    {
        inset="-3 3 0 0"
        render
        {
          // lines around
          1="fill( x0, y0 + 1, x1 - 1, y1, buttonborderdisabled)"
          2="fill( x0 - 4, y0 - 1, x1 + 1, y0 + 1, buttonborderdisabled )"  //top
          3="fill( x0, y1 - 1, x1, y1, buttonborderdisabled )"       //btm
          4="fill( x1-1, y0 + 1, x1, y1, buttonborderdisabled )" //right
          5="image( x0 + 3, y0 + 3, x1, y1, graphics/icon_collapse_over )"
        }   
        render_bg {}
	}


	
	"CGamesListPanel ListPanelColumnSelectButton"   
	{
        inset="-3 3 0 0"
        render
        {
          5="image( x0 + 3, y0 + 3, x1, y1, graphics/icon_collapse )"
        }   
        render_bg {
        1="fill( x0 + 1, y0, x1 - 1, y1, buttonborderdisabled )"
        }
	}
	"CGamesListPanel ListPanelColumnSelectButton:hover"   
	{
        inset="-3 3 0 0"
        render
        {
          5="image( x0 + 3, y0 + 3, x1, y1, graphics/icon_collapse_over )"
        }   

	}
	"CGamesListPanel ListPanelColumnSelectButton:selected"   
	{
        inset="-3 3 0 0"
        render
        {
          5="image( x0 + 3, y0 + 3, x1, y1, graphics/icon_collapse_over )"
        }   

	}
   
    ListPanelDragger
	{
		bgcolor="none"
		render 
		{
			//fill makes dragger visible
			0="fill( x0, y0 + 2, x0 + 1, y1 - 3, dialogbg )" // left
			1="fill (x0, y0, x0+1, y0+3, buttonborderdisabled )" //dot
		}
    }
    
    ListPanelInterior
    {     
		inset="3 1 0 0"
		font-size=15
		textcolor="text2"
		bgcolor="none" 
      	render
			{
				//gradient to obscure content at top of scrolling region 
				1="gradient( x0+1, y0+0, x1-1, y0 + 3, dialogbg, none  )"
				
				//gradient to obscure content at bottom of scrolling region 
				2="gradient( x0, y1 - 12, x1, y1-0, none, almostblack )"
			}
		
		render_bg {}
    } 
    
    ListPanelInterior:scrollbar
    {     
		bgcolor=none
		inset="3 1 -1 0"
		textcolor="text2"
		render
			{
				//gradient to obscure content at top of scrolling region 
				1="gradient( x0+1, y0-1, x1+1, y0 + 6, dialogbg, none  )"
				
				//gradient to obscure content at bottom of scrolling region 
				2="gradient( x0+1, y1 - 9, x1+1, y1-1, none, almostblack )"
			}
		render_bg {}
    } 

	"CSteamRootDialog ListPanel"
	{
		padding-left=2
		padding-right=2
	}
    
     "Csteamrootdialog ListPanelInterior"
    {     
       	inset="3 0 3 0"
		bgcolor=none
		render_bg {}
	}
	
	"Csteamrootdialog ListPanelInterior:scrollbar"
    {     
       	inset="3 0 -1 0"
		bgcolor=none
		render
							{
								//gradient to obscure content at top of scrolling region 
								0="gradient( x0+1, y0-1, x1+1, y0 + 6, dialogbg, none  )"
								
								//gradient to obscure content at bottom of scrolling region 
								1="gradient( x0+1, y1 - 9, x1+1, y1-1, none, almostblack )"
							}   
		render_bg {}
	}
	
	"Page ListPanelInterior"
	{
		inset="3 1 -1 0"
		font-size=15
		bgcolor=none
		render_bg {}
	}
	
	"Page ListPanelInterior:scrollbar"
	{
		inset="3 1 -1 0"
		bgcolor=none
		render
			{
				//gradient to obscure content at top of scrolling region 
				1="gradient( x0+1, y0, x1+2, y0 + 6, dialogbg, none  )"
				
				//gradient to obscure content at bottom of scrolling region 
				2="gradient( x0+2, y1 - 9, x1+2, y1-1, none, almostblack )"
			}
		render_bg {}
	}
      
    ListPanelSectionHeader
    {     
		inset="2 0 0 0"
		textcolor=label
		font-style="uppercase"
		render_bg
		{
			0="gradient_horizontal( x0 - 1, y0, x0 + 250, y1 - 1, buttonface2, none  )"
		}    
    } 
    
    ListPanelSectionHeader:hover
    {     
        textcolor=texthover
    } 
    
    
    
	"ListPanel RichText"
	{
		textcolor="Text"
		font-family=basefont
		font-size=15
		bgcolor=none
		render_bg {} 
	}


	"ListPanel RichText url" 
	{
		font-size=15
		textcolor="Text"
		font-style=underline
	}

    "ListPanel RichTextInterior"
    {
      bgcolor=DarkDialogBG
      render_bg {} 
      bgcolor=none
    }
    
    ListPanelSectionCollapser [!$OSX]
    {
      
      bgcolor=none
      render_bg {}
      image="graphics/icon_collapse" 
      inset="-4 0 0 0"
      padding-top=-2
      padding-bottom=-2
    }
    
    ListPanelSectionCollapser [$OSX]
    {
      
      bgcolor=none
      render_bg {}   
      image="graphics/icon_collapse_osx" 
      inset="-4 0 0 0"
      padding-top=-2
      padding-bottom=-2
    }
    
    ListPanelSectionCollapser:hover [!$OSX]
    {
      image="graphics/icon_collapse_over" 
    }
    
    ListPanelSectionCollapser:hover [$OSX]
    {
      image="graphics/icon_collapse_over_osx" 
    }
    
    ListPanelSectionCollapser:selected [!$OSX]
    {
      image="graphics/icon_expand" 
    }
    
    ListPanelSectionCollapser:selected [$OSX]
    {
      image="graphics/icon_expand_osx" 
    }
    
    ListPanelSectionCollapser:selected:hover [!$OSX]
    {
      image="graphics/icon_expand_over" 
    }
    
     ListPanelSectionCollapser:selected:hover [$OSX]
    {
      image="graphics/icon_expand_over_osx" 
    }
    
	MainNav
    {
		textcolor="Label"
		selectedtextcolor="Text"
		bgcolor="none"
		font-family=basefont
		font-size=21
		font-weight=700
		font-style="uppercase"
    }

	Menu
    {
		bgcolor="dialogbg"
		padding-right=4
		inset="2 2 2 2"
      
		render_bg
		{
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y0+140, MenuBG1, MenuBG2  )"
			1="fill( x0 + 1 , y0 + 140, x1 - 1, y1 - 1, MenuBG2  )"
		
			// lines around
		2="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		3="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		4="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		5="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
			// single pixel fills in the corners
		6="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		7="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		8="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		9="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
		}
      
		render {}
		corner_rounding=1
    }
    
    
    MenuBar
    {
		bgcolor=dialogbg
		padding-right=1
		padding-left=6
		padding-top=2
		padding-bottom=-2
    }
    
    "Page MenuBar"
    {
		bgcolor=none
    }
    
    
	"MenuBar MenuButton" 
	{
		textcolor="buttonborder"
		padding-right=-2
		inset="-2 0 2 0"
	}
	
 	"MenuBar MenuButton:frameFocus" 
	{
		textcolor="labeldisabled"
	}
	
	"MenuBar MenuButton:frameFocus:hover" 
	{
		textcolor="texthover"
		bgcolor=none
		
        render_bg
   		{    
			// background 
		    0="gradient( x0 + 1, y0 + 3, x1 - 5, y1 - 3, textdisabled, focus )"
		        	
		    // lines around
		    1="fill( x0 + 2, y0 + 2, x1 - 6, y0 + 3, textdisabled )"  // top
		    2="fill( x0 + 2, y1 - 3, x1 - 6, y1 - 2, focus )"  // bottom
		    3="gradient( x0, y0 + 4, x0 + 1, y1 - 4, textdisabled, focus )"  // left
		    4="gradient( x1 - 5, y0 + 4, x1 - 4, y1 - 4, textdisabled, focus )"  // right
   		}
	}
	
	"MenuBar MenuButton:frameFocus:selected" 
	{
		textcolor="texthover"
		bgcolor=none
		
        render_bg
   		{    
		    // background 
		    0="gradient( x0 + 1, y0 + 3, x1 - 5, y1 - 3, textdisabled, focus )"
		        	
		    // lines around
		    1="fill( x0 + 2, y0 + 2, x1 - 6, y0 + 3, textdisabled )"  // top
		    2="fill( x0 + 2, y1 - 3, x1 - 6, y1 - 2, focus )"  // bottom
		    3="gradient( x0, y0 + 4, x0 + 1, y1 - 4, textdisabled, focus )"  // left
		    4="gradient( x1 - 5, y0 + 4, x1 - 4, y1 - 4, textdisabled, focus )"  // right
   		}
	}
	
	MenuButton
    {
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="scrollglyph"
      bgcolor="none"
      render_bg {}
       
    }  
   
    MenuButton:hover
    {
      textcolor="white"
    }
    
   
    MenuButton:selected
    {
		textcolor="white"
    }
        
	MenuItem
    {
		font-family=basefont
		textcolor="Text"
		font-size=14
		font-weight=700
		inset="0 0 0 0"
		padding-right=6
		bgcolor="none"
		render_bg {}
    }
   
    MenuItem:selected
    {
		textcolor="TextHover"
		bgcolor="Focus"
    }
	
    MenuItem:hover
    {
		textcolor="TextHover"
		bgcolor="Focus"
    }
    
    MenuItem:disabled
    {
		textcolor="labeldisabled"
		shadowtextcolor=none
    }
    
    MenuItem:disabled:hover
    {
		textcolor="labeldisabled"
		shadowtextcolor=none
    }
   
   
    MenuSeparator
    {
		inset="2 0 6 0"
		textcolor="Divider"
		bgcolor=none
    }

    Notification
    {
		font-family=basefont
		font-size=15
		font-weight=400
		bgcolor=none
		render_bg
		{
			0="gradient( x0+1, y0, x1-1, y0+80, DialogBG, ClientBG )"
        
			0="gradient_horizontal( x0 + 1, y1 - 1, x1 -1, y1, ClientBG, Highlight5 )"    // bottom
			1="gradient( x1 - 1, y0 + 1, x1, y1 - 1, ClientBG, Highlight5 )" // right
			2="fill( x0 + 1, y0, x1 - 1, y0 + 1, ClientBG )"  // top
			3="fill( x0, y0 + 1, x0 + 1, y1 - 1, ClientBG )" // left
     
			// single pixel fills in the corners
			4="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ClientBG )"
			5="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ClientBG )"
			6="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ClientBG )"
			7="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, Highlight5a )"
		}
      
		render {}
		corner_rounding=1
    }
    
    Page
    {
		bgcolor="none"
		render_bg
		{
			// background gradient
			0="gradient( x0, y0 + 18, x1, y1, DialogBG, PropertySheetBG )"
		}
    }

    "CSteamRootDialog Page"
    {
		bgcolor="none"
		render_bg {}
    }
    
    "Page RadioButtonList"
    {
		bgcolor="DialogBG"
    }
      
	PageTab
    {
		textcolor="Label"
		font-family=basefont
		font-size=13
		font-style=Uppercase
		font-weight=400
		inset="0 -2 0 0"
        render_bg
		{
			// background gradient
			0="fill( x0, y0 , x1, y1 - 4, PropertySheetBG )"
			1="fill(x0, y1-2, x1+3000, y1 -1, divider )"
			
		}
    }

    
    PageTab:selected
    {
		textcolor="texthover"
		font-family=basefont
		font-size=13
		font-style=Uppercase
		font-weight=400
		inset="0 -2 0 0"
		bgcolor="none"
	    render_bg
			{
				// background gradient
				0="gradient( x0, y0 , x1, y1, divider, dialogbg )"
		    1="fill(x1, y1-2, x1+3000, y1 - 1, divider )"
			}
    }

    
 	PageTab:hover
    {
		textcolor="texthover"
		font-family=basefont
		font-size=13
		font-style=Uppercase
		font-weight=400
		inset="0 -2 0 0"
		render_bg
			{
				// background gradient
				0="fill( x0, y0 , x1, y1 - 4, buttonfacehover )"
				1="fill(x0, y1-2, x1+3000, y1 -1, divider )"
			}
    }
  
    PageTab:selected:hover
    {
		textcolor="texthover"
		font-family=basefont
		font-size=13
		font-style=Uppercase
		font-weight=400
		inset="0 -2 0 0"
		bgcolor="none"
	    render_bg
			{
				// background gradient
				0="gradient( x0, y0 , x1, y1, divider, dialogbg )"
		    1="fill(x1, y1-2, x1+3000, y1 - 1, divider )"
			}
    }
      
  PageTab:Focus
	  {
		textcolor="Texthover"
    }

	"PageDragFrame PageTab"
	{
		font-size=14
		font-style=""
	}

  TabCloseButton
    {
		render_bg {}
		image="graphics/tiny_x_default"
    }

	TabCloseButton:hover
    {
		image="graphics/tiny_x_hover"
    }
    
    Panel
	{ 
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="Text"
		bgcolor="none"
    }
         	
    ProgressBar
    {
		textcolor="Highlight5"
		bgcolor="none"
		render
		{
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
			// single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}   
	}
    
	"Page ProgressBar"
    {
		textcolor="Highlight5"
		bgcolor="none"
		render
		{
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderPage )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderPage )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderPage )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderPage )"  // right
        
			// single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderPage )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderPage )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderPage )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderPage )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}   
    }
	
    PropertyPage
    {
		bgcolor="PropertySheetBG"
    }
    
    "CFriendsDialog PropertySheet"
    {
		bgcolor="none"
    }
    
    RadioButton
    {
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="Label"
		render_bg {}
		image="graphics/RadUnselStd"
		bgcolor=none
    }     
  
    RadioButton:selected
    {
		render_bg {}
		image="graphics/radSelStd"  
    }
    
    RadioButton:focus
    {
		textcolor="Texthover"
		bgcolor=none
		image="graphics/radSelFocus"
    }

    RadioButton:selected:focus
    {
		textcolor="Texthover"  
		bgcolor=none
		image="graphics/radSelFocus"
    }
    
    RadioButtonList
    {
		bgcolor="DialogBG"
		inset="-2 0 0 0"

		render_bg
		{
		0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, DialogBG, ClientBG  )"
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
			// single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}     
    }
        
    RichText
    {
		textcolor="Text"
		selectedtextcolor="TextSelected"		
		font-family=basefont
		font-size=14
		font-weight=400
		inset="0 -1 0 0"
		render_bg
		{
			-1="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, DialogBG )"
        
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
			// single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
		}     
    }
         
    RichTextInterior 
	{
		bgcolor=none
    }
    
	// style of links in a rich text control
	
	"RichText url"
	{
		font-size=14
		textcolor="label"
		selectedtextcolor="label"
		font-style=underline
	}
	
	"RichText url:hover"
	{
		textcolor="Texthover"
	}
	
	
	"CFriendPanel RichText URL" 
		{
		textcolor="text"
		font-style=underline
		font-size=14
		}
	
	// style of bold text in a rich text control
	"RichText bold"
	{
		font-size=15
		font-weight=1000
	}
	
	"RichText emphasis"
	{
		font-size=15
		font-style=italic
	}

	ScrollBar
	{
		inset="0 0 0 0"
	}
    
    ScrollBarButton.up
    {
		bgcolor=none
		inset="-1 2 0 0"
		image="graphics/icon_up_default"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 + 3, x1 - 4, y1 + 2, buttonface )"
					
			// lines around
			1="fill( x0 + 3, y0 + 2, x1 - 5, y0 + 3, ButtonFace )"  // top
			2="fill( x0 + 3, y1 + 2, x1 - 5, y1 + 3, ButtonFace )"  // bottom
		}
		
    }
    
    ScrollBarButton.up:hover
    {
		bgcolor=none
		inset="-1 2 0 0"
		image="graphics/icon_up_hover"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 + 3, x1 - 4, y1 + 2, buttonfaceActive )"
					
			// lines around
			1="fill( x0 + 3, y0 + 2, x1 - 5, y0 + 3, ButtonFaceActive )"  // top
			2="fill( x0 + 3, y1 + 2, x1 - 5, y1 + 3, ButtonFaceActive )"  // bottom
		}
    }
    
    ScrollBarButton.up:active
    {
		inset="-1 2 0 0"
		image="graphics/icon_up_hover"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 + 3, x1 - 4, y1 + 2, buttonfaceActive )"
					
			// lines around
			1="fill( x0 + 3, y0 + 2, x1 - 5, y0 + 3, ButtonFaceActive )"  // top
			2="fill( x0 + 3, y1 + 2, x1 - 5, y1 + 3, ButtonFaceActive )"  // bottom
		}
    }

    ScrollBarButton.up:disabled
    {
		inset="-1 2 0 0"
		image="graphics/icon_up_disabled"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 + 3, x1 - 4, y1 + 2, buttonfaceDisabled )"
					
			// lines around
			1="fill( x0 + 3, y0 + 2, x1 - 5, y0 + 3, ButtonFaceDisabled )"  // top
			2="fill( x0 + 3, y1 + 2, x1 - 5, y1 + 3, ButtonFaceDisabled )"  // bottom
		}
    }
	
    ScrollBarButton.down
	{
		bgcolor=none
		inset="-2 0 0 0"
		image="graphics/icon_down_default"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 - 1, x1 - 4, y1 - 3, buttonface )"
					
			// lines around
			1="fill( x0 + 3, y0 - 2, x1 - 5, y0 - 1, buttonface )"  // top
			2="fill( x0 + 3, y1 - 3, x1 - 5, y1 - 2, buttonface )"  // bottom
		}
    }
    
    ScrollBarButton.down:hover
	{
		inset="-2 0 0 0"
		image="graphics/icon_down_hover"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 - 1, x1 - 4, y1 - 3, buttonfaceActive )"
					
			// lines around
			1="fill( x0 + 3, y0 - 2, x1 - 5, y0 - 1, buttonfaceActive )"  // top
			2="fill( x0 + 3, y1 - 3, x1 - 5, y1 - 2, buttonfaceActive )"  // bottom
		}
    }
    
        ScrollBarButton.down:active
	{
		inset="-2 0 0 0"
		image="graphics/icon_down_hover"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 - 1, x1 - 4, y1 - 3, buttonfaceActive )"
					
			// lines around
			1="fill( x0 + 3, y0 - 2, x1 - 5, y0 - 1, buttonfaceActive )"  // top
			2="fill( x0 + 3, y1 - 3, x1 - 5, y1 - 2, buttonfaceActive )"  // bottom
		}
    }
    
    
        ScrollBarButton.down:disabled
	{
		inset="-2 0 0 0"
		image="graphics/icon_down_hover"
		render_bg
		{
			// background fill
			0="fill( x0 + 2, y0 - 1, x1 - 4, y1 - 3, buttonfaceDisabled )"
					
			// lines around
			1="fill( x0 + 3, y0 - 2, x1 - 5, y0 - 1, buttonfaceDisabled )"  // top
			2="fill( x0 + 3, y1 - 3, x1 - 5, y1 - 2, buttonfaceDisabled )"  // bottom
		}
    }
    
    ScrollBarButton.left
    {
		bgcolor=none
		inset="1 3 0 0"
		image="graphics/icon_left_default"
		render_bg 
		{
			// center fill
			0="fill( x0 + 2, y0 + 5, x1, y1 - 3, ButtonFace )"
			
			// lines around
			1="fill( x0 + 3, y0 + 4, x1 - 1, y0 + 5, buttonface )"  // top
			2="fill( x0 + 3, y1 - 3, x1 - 1, y1 - 2, buttonface )"  // bottom
        	}
    }
    
    ScrollBarButton.left:hover
    {

		image="graphics/icon_left_hover"
		inset="1 3 0 0"
		render_bg 
		{
			// center fill
			0="fill( x0 + 2, y0 + 5, x1, y1 - 3, ButtonFaceActive )"
			
			// lines around
			1="fill( x0 + 3, y0 + 4, x1 - 1, y0 + 5, ButtonFaceActive )"  // top
			2="fill( x0 + 3, y1 - 3, x1 - 1, y1 - 2, ButtonFaceActive )"  // bottom
        	}
    }
        
    ScrollBarButton.right
    {
		bgcolor=none
		image="graphics/icon_right_default"
		inset="0 2 0 0"
		render_bg 
		{
			// center fill
			0="fill( x0, y0 + 5, x1, y1 - 3, ButtonFace )"
			
			// lines around
			1="fill( x0 + 1, y0 + 4, x1 - 2, y0 + 5, ButtonFace )"  // top
			2="fill( x0 + 1, y1 - 3, x1 - 2, y1 - 2, ButtonFace )"  // bottom
        }
    }
        
    ScrollBarButton.right:hover
    {
		image="graphics/icon_right_hover"
		inset="0 2 0 0"
		render_bg 
		{
			// center fill
			0="fill( x0, y0 + 5, x1, y1 - 3, ButtonFaceActive )"
			
			// lines around
			1="fill( x0 + 1, y0 + 4, x1 - 2, y0 + 5, ButtonFaceActive )"  // top
			2="fill( x0 + 1, y1 - 3, x1 - 2, y1 - 2, ButtonFaceActive )"  // bottom
        }
    }
    
    ScrollBarHandle  //vertical scrollbar thumb
    {
		bgcolor=none
		image="graphics/icon_scroll_handle"
		render_bg 
		{
			// center fill
			0="fill( x0 + 2, y0 + 6, x1 - 4, y1 - 5, ButtonFace )"
			
			// lines around
			1="fill( x0 + 3, y0 + 5, x1 - 5, y0 + 6, buttonface )"  // top
			2="fill( x0 + 3, y1 - 5, x1 - 5, y1 - 4, buttonface )"  // bottom
		}
    }
       
    "ScrollBarHandle:hover"
    {
		image="graphics/icon_scroll_handle_over"
		render_bg 
		{
			// center fill
			0="fill( x0 + 2, y0 + 6, x1 - 4, y1 - 5, ButtonFaceActive )"
			
			// lines around
			1="fill( x0 + 3, y0 + 5, x1 - 5, y0 + 6, buttonfaceActive )"  // top
			2="fill( x0 + 3, y1 - 5, x1 - 5, y1 - 4, buttonfaceActive )"  // bottom
		}
    }
    
    "ScrollBarHandle:active"
    {
		image="graphics/icon_scroll_handle_over"
		render_bg 
		{
			// center fill
			0="fill( x0 + 2, y0 + 6, x1 - 4, y1 - 5, ButtonFaceActive )"
			
			// lines around
			1="fill( x0 + 3, y0 + 5, x1 - 5, y0 + 6, buttonfaceActive )"  // top
			2="fill( x0 + 3, y1 - 5, x1 - 5, y1 - 4, buttonfaceActive )"  // bottom
		}
    }
    

 
    "SliderHoriz"  //horizontal scrollbar thumb
    {
	 
	 image="graphics/icon_scroll_handle_horiz"
      render {
      	// center fill
        	1="fill( x0 + 2, y0 + 6, x1 - 1, y1 - 3, ButtonFace )"	
        		
		// lines around
		1="fill( x0 + 3, y0 + 5, x1 - 2, y0 + 6, buttonface )"  // top
		2="fill( x0 + 3, y1 - 3, x1 - 2, y1 - 2, buttonface )"  // bottom
		}

    }
    
    "SliderHoriz:hover"
    {
	
	 image="graphics/icon_scroll_handle_over_horiz"
      render {
      	// center fill
        	0="fill( x0 + 2, y0 + 6, x1 - 1, y1 - 3, ButtonFaceActive )"	
        		
		// lines around
		1="fill( x0 + 3, y0 + 5, x1 - 2, y0 + 6, buttonfaceActive )"  // top
		2="fill( x0 + 3, y1 - 3, x1 - 2, y1 - 2, buttonfaceActive )"  // bottom
		}

    }
    
    "SliderHoriz:active"
    {
	 
	 image="graphics/icon_scroll_handle_over_horiz"
      render {
      	// center fill
        	0="fill( x0 + 2, y0 + 6, x1 - 1, y1 - 3, ButtonFaceActive )"	
        		
		// lines around
		1="fill( x0 + 3, y0 + 5, x1 - 2, y0 + 6, buttonfaceActive )"  // top
		2="fill( x0 + 3, y1 - 3, x1 - 2, y1 - 2, buttonfaceActive )"  // bottom
		}
    }
    
    ScrollBarSlider // gutter
    {
		bgcolor="none"
		render_bg
		{

			//lines around
			1="fill( x0 + 3, y0 + 5, x1 - 5, y0 + 6, buttonborderdisabled )"  // top
			
			//background fill
			2="gradient( x0 + 2, y0 + 6, x1 - 4, y0 + 200, buttonborderdisabled, none)"
		}
    }
    
    ScrollBarSliderHoriz // gutter
    {
		bgcolor="none"
		render_bg { }
    }
    
   
    "GamesPage_Details ListPanel ScrollBarSlider" // gutter in games list detail view 
    {
		bgcolor="none"
		render_bg
		{
			//background fill
			0="gradient( x0 + 2, y0 + 6, x1 - 4, y0 + 200, buttonborderdisabled, none)"
			//lines around
			1="fill( x0 + 3, y0 + 5, x1 - 5, y0 + 6, buttonborderdisabled )"  // top
		}
    }
    
    ScrollBarSlider:disabled 
    {
		bgcolor="none"
		render_bg {}
    }
    
    "ScrollBar SliderHoriz" // gutter
    {
		bgcolor="dialogbg"
    }

	"HTML ScrollBar"
	{
		bgcolor="none"
		render_bg { 
			0="fill(x0,y0,x1 - 1,y1 - 1, almostblack)"
		}
	}
	"HTML ScrollBar.Horizontal"
	{
		bgcolor="none"
		render_bg { 
			0="fill(x0,y0,x1+25,y1, almostblack)"
		}
	}
	
	"HTML ScrollBarSlider.Horizontal" 
	{
		bgcolor=none
		render_bg {
			//background fill
			0="gradient_horizontal( x0 + 6, y0 + 5, x0 + 200, y1 - 2, buttonborderdisabled, none)"
			//lines around
			1="fill( x0 + 5, y0 + 6, x0 + 6, y1 - 3, buttonborderdisabled )"  // top
		}

	}

	"HTML SliderHoriz"
	{
		bgcolor=none
		render_bg
		{
		}
	}
 
    SectionedListPanel
    {
		bgcolor="propertysheetbg"
		font-family=basefont
		font-size=14
		font-weight=400
		textcolor="Text"
		selectedtextcolor="TextSelected"
		selectedbgcolor="Focus"
		bgcolor="none"
		render_bg 
		{
			// lines around
			1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
			2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
			3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
			4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
			// single pixel fills in the corners
			5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
			6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
			7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
			8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
			// background gradient
			0="gradient( x0 + 1, y0 + 1, x1, y0 + 1, Propertysheetbg, BackgroundStartOpaque)"
		}
        inset="1 -1 1 1"  
    }
    
    "CFriendsDialog SectionedListPanel"
    {
      bgcolor="none"
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="Text"
      selectedtextcolor="TextSelected"
      selectedbgcolor="Focus"
      render_bg 
      {
       	// background fill
	   		0="gradient( x0 + 1, y0, x1 - 1, y0 + 140, dialogbg, almostblack )"
	   		1="fill( x0 + 1, y0 + 140, x1 - 1, y1-1, almostblack )"
	   		
	   		//lines around, special due to tabs at top
	   		2="gradient( x1 - 1, y0 -1, x1, y1 -1, dialogbg, ButtonBorderDisabled )"  // right
	   		3="gradient( x0, y0, x0 + 1, y1 - 2, dialogbg, ButtonBorderDisabled )"  // left
	   		//single pixel fills
	   		4="fill( x0, y1-1, x0 + 1, y1, dialogbg )"
				5="fill( x1-1, y1-1, x1, y1, dialogbg )"

	   		
      }    
    }
    
    SectionedlistpanelCollapser
    {
      render_bg {}
      bgcolor=none
      image="graphics/icon_collapse"
      inset="2 1 0 0"
    } 
    
    SectionedListPanelCollapser:hover
    {
      image="graphics/icon_collapse_over"
    }
    
    SectionedListPanelCollapser:selected
    {
      image="graphics/icon_expand"
    }
    
    SectionedListPanelCollapser:selected:hover
    {
      image="graphics/icon_expand_over"
    }
    

  
    Slider
    {
      font-family=basefont
      font-size=10
      font-weight=400
      textcolor="label"
      font-style=uppercase
    }
      
    Slider:focus
    {
      textcolor="Text"  
    }
    
    StatusLabel
    {
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="labelfocus"
      font-style=uppercase
      
    }

    StatusLabel:hover
    {
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="white"
      font-style=uppercase
    }   
    

    TextEntry
    {
      font-family=basefont
      font-size=14
      textcolor="Text"
      font-weight=400
      bgcolor="none"
      selectedtextcolor="white"
      selectedbgcolor="TextSelectedBG"
      shadowtextcolor="Text"  // this is the cursor color

      inset-left=4
      inset-top=0
      render
      {
        // lines around
          1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }     
    }
    
	"Page TextEntry"
    {
      render
      {
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderPage )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderPage )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderPage )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderPage )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderPage )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderPage )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderPage )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderPage )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }     
    }
    
    TextEntry:focus
    {     
		textcolor="TextHover"
		bgcolor=none
		render
		{
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
			// single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}     
    }
       
    "Page TextEntry:focus"
    {     
      textcolor="TextHover"
      render
      {
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"

      }     
    }
    
    
    TextEntry:disabled
    {     
      textcolor="TextDisabled"
      bgcolor="ButtonFaceDisabled"
      render
      {
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }     
    }
    
	// The 'empty' style is used for 'hint text' in text entry fields.
	// If the text box does not have focus and does not have content, a
	// hint text property will be shown with this style. This is comment
	// to pre-fill to box with something like 'Search' that goes away when active
	TextEntry:empty
	{
		font-style=italic
		textcolor=LabelDisabled
	}
	
    TextEntryLarge
    {
      font-family=basefont
      font-size=24
      textcolor="Text"
      font-weight=400
      bgcolor="none"
      selectedtextcolor="TextEntrySelected"
      selectedbgcolor="TextSelectedBG"
      shadowtextcolor="Text"  // this is the cursor color

      inset-left=4
      inset-top=5
      inset-bottom=5
      render
      {
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }     
    }

    TextEntryLarge:focus
    {     
      textcolor="TextHover"
      render
      {
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }     
    }
    
    TextEntryLarge:disabled
    {     
      textcolor="TextDisabled"
      bgcolor="ButtonFaceDisabled"
      render
      {
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
      }     
    }
    
    TextEntryURL
	{
		font-family=basefont
		font-size=14
		textcolor="text"
		font-weight=400
		bgcolor="none"
		selectedtextcolor="TextEntrySelected"
		selectedbgcolor="TextSelectedBG"
		shadowtextcolor="Text"	// this is the cursor color
		inset-left=0
		inset-top=-1
		render { }			
	}

	TextEntryURL:Hover
	{
		textcolor="texthover"
		render
		{
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonFaceDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonFaceDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonFaceDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonFaceDisabled )"  // right
			
			// single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonFaceDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonFaceDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonFaceDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonFaceDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
		}			
	}
	
	ToggleButton
    {
      inset="1 0 0 0"
      inset="1 3 0 0" [$OSX]
      font-family=basefont
      font-size=13
      font-weight=400
      textcolor="Text"
      bgcolor=none
      render_bg
      {
      
        // background fill
	   0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
			
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
        // single pixel fills in the corners
  		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }

  
    ToggleButton:focus
    {     
            textcolor="TextHover"
            bgcolor="ButtonFaceFocus"
	 		render_bg
		{
			// background fill
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
                
			// lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
			// single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}
    }
    
    ToggleButton:hover
    {
      textcolor="TextHover"
      bgcolor="ButtonFaceHover"
      render_bg
      {     
        
        // background fill
        0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfaceactive, propertysheetbg )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right

        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"

      }
    }
    
    ToggleButton:selected
    {
      
      textcolor="TextHover"
      bgcolor="none"
      render_bg
      {
        	// background fill
		0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, backgroundstartopaque, propertysheetbg )"
        
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
  
    
    "Page ToggleButton"
    {
      font-family=basefont
      font-size=13
      font-weight=400
      textcolor="Text"
      bgcolor=none
      render_bg
      {
      
      			// background fill
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface2, propertysheetbg )"
			
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderPage )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderPage )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderPage )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderPage )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderPage )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderPage )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderPage )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderPage )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    "Page ToggleButton:hover"
    {
      textcolor="TextHover"
      bgcolor="none"
      render_bg
      {
      
      	0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfacehover, propertysheetbg )"
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
  
    "Page ToggleButton:focus"
    {
      
      textcolor="TextHover"
      bgcolor="none"
      render_bg
      {
		0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfacefocus, propertysheetbg )"
        
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
        "Page ToggleButton:selected"
    {
      
      textcolor="TextHover"
      bgcolor="none"
      render_bg
      {
		0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonfacefocus, propertysheetbg )"
        
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderFocus )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderFocus )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderFocus )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderFocus )"  // right
        
        // single pixel fills in the corners
	   	5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderFocus )"
	   	6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"
	   	7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderFocus )"
	   	8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"
	   		9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
      }
    }
    
    // the background and frame of a tooltip
    TooltipWindow
    {
        bgcolor="MenuBG1"
    }

	// body text inside a tooltip
    "TooltipWindow Label"
    {
		padding-left=4
        textcolor="Text"
    }
    
    // headline text inside a tooltip
   	tooltip_headline
   	{
   		textcolor="TextSelected"
   		padding-left=4
   		padding-top=1
   		padding-bottom=0
   		font-weight=1000   		
   	}
   	
    TreeNode
    {
      bgcolor=none
      render_bg {}
    }
    
    TreeNodeImage
    {
      bgcolor=none
    }
    
    TreeViewSubPanel
    {
      bgcolor=none

    }
  
    TreeNodeText
    {
      font-family=basefont
      font-size=13
      textcolor="Text"
      selectedtextcolor="TextSelected"
      selectedbgcolor="TextSelectedBG"
      bgcolor=none
      render {}
      render_bg {}
    }
  
    TreeView
    {
      render_bg
      {
        -1="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, none )"

        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right
        
        // single pixel fills in the corners
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"

      }     
    }
    
    URLLabel
    {
      textcolor="label"
      bgcolor="none"
      font-family=basefont
      font-size=14
      font-weight=400
      font-style=underline
    }
    
   	URLLabel:Hover
	{
	 textcolor="texthover"
	 font-size=14
	}
	
	URLLabelSimple
    {
      textcolor="labelfocus"
      bgcolor="none"
      font-family=basefont
      font-size=14
      font-weight=400
      font-style=regular
    }

	URLLabelSimple [$OSX]
    {
      textcolor="labelfocus"
      bgcolor="none"
      font-family=basefont
      font-size=13
      font-weight=400
      font-style=regular
    }
    
    URLLabelSimple:Hover
    {
      font-style=underline
      textcolor="WHITE"
    }  

    
    // Steam-specific styles
    CConsoleHistory
    {
      font-family="Lucida Console"
      font-size=9
      font-family="Menlo" [$OSX]
      font-size=14 [$OSX]
      textcolor="label"
      selectedtextcolor="TextSelected"
    }
    
    GameColumnHeaderFavorites
    {
      image="steam/cached/fav_remove"

    }
    
    CGamesListFavoritesToggle
    {
      image="steam/cached/fav_addTo"
    }
    
    CGamesListFavoritesToggle:hover
    {
      image="steam/cached/fav_addTo_ovr"
    }
    
    CGamesListFavoritesToggle:selected
    {
      image="steam/cached/fav_remove"
    }

    CGamesListFavoritesToggle:selected:hover
    {
      image="steam/cached/fav_remove_ovr"
    }

    WrapPanel
    {
      inset="0 0 0 0"
      font-family=basefont
      font-size=14
      font-weight=400
      textcolor="Text"
      selectedtextcolor="TextSelected"
      selectedbgcolor="Focus"
      bgcolor=none
      render_bg {

        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
        
        // single pixel fills in the corners
		5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
		6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
		7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
		8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
        
        // background gradient
        8="gradient( x0 + 1, y0 + 1, x1, y0 + 240, propertysheetbg, DarkDialogBG )"
        9="fill( x0, y0 + 240, x1, y1, DarkDialogBG )"
            }
        inset="1 -1 1 1"  
    }
   
    BackButton
    {
      bgcolor=none
      inset="-5 -1 0 0"
      render_bg={}
      image="graphics/icon_button_back"
    }
	
    BackButton:hover
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_back_over"
    }
	
    BackButton:active
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_back_down"
    }
	
    BackButton:disabled
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_back_disabled"
    }
	
    FullscreenButton
    {
      bgcolor=none
      inset="-4 -3 0 0"
      render_bg={}
      image="graphics/icon_button_fullscreen"
    }
    

    FullscreenButton:hover
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_fullscreen_over"
    }
	
    FullscreenButton:active
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_fullscreen_down"
    }
	
    FullscreenButton:disabled
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_fullscreen_disabled"
    }

    ForwardButton
    {
      bgcolor=none
      inset="-5 -1 0 0"
      render_bg={}
      image="graphics/icon_button_forward"
    }
    
    ForwardButton:hover
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_forward_over"
    }
	
    ForwardButton:active
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_forward_down"
    }
	
    ForwardButton:disabled
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_forward_disabled"
    }
    
    HomeButton
    {
      bgcolor=none
      inset="-5 0 0 0"
      render_bg={}
      image="graphics/icon_button_home"
    }
    
    HomeButton:hover
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_home_over"
    }
	
    HomeButton:active
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_home_down"
    }
	
    HomeButton:disabled
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_home_disabled"
    }
	
    ReloadButton
    {
      bgcolor=none
      inset="-5 0 0 0"
      render_bg={}
      image="graphics/icon_button_reload"
    }
    
    ReloadButton:hover
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_reload_over"
    }

    ReloadButton:active
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_reload_down"
    }

    ReloadButton:disabled
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_reload_disabled"
    }
    
    StopButton
    {
      bgcolor=none
      inset="-5 0 0 0"
      render_bg={}
      image="graphics/icon_button_stop"
    }
    
    StopButton:hover
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_stop_over"
    }

    StopButton:active
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_stop_down"
    }

    StopButton:disabled
    {
      bgcolor=none
      render_bg={}
      image="graphics/icon_button_stop_disabled"
    }
    
  
	gamedetails-headerlabel
	{
		font-size="17"
		font-style="normal"
		font-family=basefont
		font-weight=700
		textcolor="Text"
		font-style="uppercase;"
	}

	gamedetails-headerlabel-red
	{
		font-size="17"
		font-style="normal"
		font-family=basefont
		font-weight=700
		textcolor="GameDetailsRed"
		font-style="uppercase;"
	}
 
 	"html-findbar"
 	{
		font-family=basefont
		font-size=14
		textcolor="text2"
		font-weight=400
		//visible=false
		bgcolor="DarkClientBG"
		selectedtextcolor="TextEntrySelected"
		selectedbgcolor="TextSelectedBG"
		shadowtextcolor="Text"	// this is the cursor color
		inset-left=0
		inset-top=0
		
			render
		      {
		        // lines around
		        0="fill( x0 + 1, y0 + 2, x0 + 2, y1 + 1, ButtonBorder )"
		        1="gradient_horizontal( x0 + 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder, none )" 
		        2="gradient_horizontal( x0 + 2, y1 + 1, x1 - 1, y1 +2, ButtonBorder, none )"
		      }     	
	}
		
	gamedetails-headerlabel-green
	{
		font-size="17"
		font-style="normal"
		textcolor="GameDetailsGreen"
		font-family=basefont
		font-weight=700
		font-style="uppercase;"
	}

	gamedetails-headerlabel-blue
	{
		font-size="17"
		font-style="normal"
		textcolor="GameDetailsBlue"
		font-family=basefont
		font-weight=700
		font-style="uppercase;"
	}
	
	// styles for text used in RichText controls in various places
	
	console_text_error
	{
		textcolor="Highlight3"
		font-size=14
		font-family="Menlo" [$OSX]
      	font-size=16 [$OSX]
		selectedtextcolor="TextSelected"
		selectedbgcolor="Focus"
	}
	
	console_text
	{
 		font-family="Lucida Console"
		font-size=9
		font-family="Menlo" [$OSX]
      	font-size=14 [$OSX]
	    textcolor="text"
		selectedtextcolor="TextSelected"	
		selectedbgcolor="Focus"
	}
	
	friends_chat_text
	{
		textcolor="text"
		selectedtextcolor="TextentrySelected"	
		SelectedBgColor="focus"
		font-size=14
	}
	
	friends_chat_text_self
	{
		textcolor="ChatOwnTextColor"
		selectedtextcolor="TextentrySelected"	
		selectedbgcolor="focus"
		font-size=14
	}
	
	friends_chat_event
	{
		textcolor="Text"
		font-size=14
		selectedtextcolor="TextentrySelected"
		selectedbgcolor="focus"
	}

	friends_chat_bright_event
	{
		textcolor="text"
		selectedtextcolor="TextentrySelected"
		font-size=14
		font-weight=1000
	}

	friends_chat_url
	{
		textcolor="text"
   		SelectedBgColor="focus"
		font-style=underline
		font-size=14
		selectedtextcolor="TextentrySelected"
		selectedbgcolor="focus"
	}
	
	friends_chat_name_ingame
	{
		textcolor="Friends.InGameColor"
		selectedtextcolor="TextentrySelected"	
		selectedbgcolor="focus"
		font-size=14

	}
	
	friends_chat_self
	{
		textcolor="Friends.OnlineColor"
		selectedtextcolor="TextentrySelected"	
		selectedbgcolor="focus"
		font-size=14
	}
	
	friends_chat_name
	{
		textcolor="Friends.OnlineColor"
		selectedtextcolor="TextentrySelected"	
		selectedbgcolor="focus"
		font-size=14
	}
	
	friends_chat_accountid
	{
		selectedtextcolor="TextentrySelected"	
		selectedbgcolor="focus"
		textcolor="text"
		font-size=14
	}
	
	friends_chat_securitylink
	{
		textcolor="text"
		bgcolor="none"
		font-family=basefont
		font-size=14
		font-weight=400
		font-style=underline
		selectedtextcolor="TextSelected"	
		selectedbgcolor="Focus"
	}
	
	Chat_MenuButton_withChrome
	{
		font-family=basefont
		font-style="uppercase"
		font-size="13"
		font-weight=400
		textcolor="text"
		bgcolor="none"
		render_bg 
		{     
			// background fill
			0="gradient( x0 + 1, y0 + 1, x1 - 1, y1 - 1, buttonface, propertysheetbg )"
                
			// lines around
			1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
			2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
			3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
			4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right

			// single pixel fills in the corners
			5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorder )"
			6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"
			7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorder )"
			8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"
			9="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonFace2 )"
			10="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonFace2 )"
			11="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonFace2 )"
			12="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonFace2 )"
			13="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonFace2 )"
			14="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonFace2 )"
			15="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonFace2 )"
			16="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonFace2 )"
		}
		minimum-width=120
	}
	
	Chat_MenuButton_withChrome::disabled
  {
      textcolor="LabelDisabled"
      render_bg
      {     
        // background fill
        0="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, none )"
                
        // lines around
		1="fill( x0 + 2, y0, x1 - 2, y0 + 1, buttonborderdisabled )"  // top
		2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
		3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
		4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right

        // single pixel fills in the corners
        5="fill( x0 + 1, y0 + 1, x0 + 2, y0 + 2, ButtonBorderDisabled )"
        6="fill( x1 - 2, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"
        7="fill( x0 + 1, y1 - 2, x0 + 2, y1 - 1, ButtonBorderDisabled )"
        8="fill( x1 - 2, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"
        			11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
			12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
			13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
			14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
			15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
			16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
			17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
			18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
        
      }
    }    
    
	
   	// used in friends tooltip and friends list for overriding regular styles with custom colors
   	friends_offline
   	{
   		textcolor="Friends.OfflineColor"
   	}
   	friends_online
   	{
   		textcolor="Friends.OnlineColor"
   	}
   	friends_ingame
   	{
   		textcolor="Friends.InGameColor"
   	}
   	friends_ignored
   	{
   		textcolor="Friends.IgnoredColor"
   	}
   	
   	TabPageCloseButton
   	{
   		padding-right=16
   	}
  }
}
